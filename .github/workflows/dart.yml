# # This workflow uses actions that are not certified by GitHub.
# # They are provided by a third-party and are governed by
# # separate terms of service, privacy policy, and support
# # documentation.

# name: release

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]


# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest
#     permissions:
#       contents: write

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       - uses: actions/checkout@v3

#       # Set up Flutter.
#       - uses: subosito/flutter-action@v1
#         with:
#           channel: "stable"
#       - run: flutter doctor -v

#       # Checkout the repository code and get packages.
#       - name: Checkout flutter_app code
#         uses: actions/checkout@v3
#       - run: flutter pub get

#       - name: Build APK
#         run: flutter build apk --split-per-abi --release

#       - name: Build APP BUNDLE
#         run: flutter build appbundle

#       - name: Create Release
#         uses: ncipollo/release-action@v1.10.0
#         with:
#           artifacts: "build/app/outputs/apk/release/*.apk, build/app/outputs/bundle/release/*.aab"

#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           name: release-apk
#           path: build/app/outputs/apk/
###################################
name: release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter doctor -v

      - name: Get version from pubspec.yaml
        run: echo "VERSION=$(grep -oP 'version: \K(\d+\.\d+\.\d+)' pubspec.yaml)" >> $GITHUB_ENV

      - name: Build APK
        run: flutter build apk --split-per-abi --release

      - name: Build APP BUNDLE
        run: flutter build appbundle

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}  # Use the version extracted from pubspec.yaml
          release_name: Release ${{ env.VERSION }}
          body: |
            Release version ${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: |
            build/app/outputs/apk/release/app-arm64-v8a-release.apk
            build/app/outputs/apk/release/app-armeabi-v7a-release.apk
            build/app/outputs/apk/release/app-x86_64-release.apk

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-aab
          path: build/app/outputs/bundle/release/app-release.aab
